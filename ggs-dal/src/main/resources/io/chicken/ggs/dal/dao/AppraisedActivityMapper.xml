<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.chicken.ggs.dal.dao.AppraisedActivityMapper" >
  <resultMap id="BaseResultMap" type="io.chicken.ggs.dal.model.AppraisedActivity" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="activity_name" property="activityName" jdbcType="VARCHAR" />
    <result column="appraise_id" property="appraiseId" jdbcType="BIGINT" />
    <result column="begin_date" property="beginDate" jdbcType="TIMESTAMP" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="sign_End_date" property="signEndDate" jdbcType="TIMESTAMP" />
    <result column="activity_status" property="activityStatus" jdbcType="INTEGER" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="io.chicken.ggs.dal.model.AppraisedActivity" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, activity_name, appraise_id, begin_date, end_date, sign_End_date, activity_status, 
    creator, create_time, update_time
  </sql>
  <sql id="Blob_Column_List" >
    remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Appraised_Activity
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="queryList" resultMap="ResultMapWithBLOBs" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from Appraised_Activity
    <if test="param.activityName != null and param.activityName != ''">
        where activity_name LIKE concat('%', #{param.activityName},'%')
    </if>
    ORDER by create_time desc
    limit #{start}, #{pageSize}
  </select>
  <select id="queryTotal" resultType="java.lang.Long" >
    select count(1)
    from Appraised_Activity
    <if test="param.activityName != null and param.activityName != ''">
      where activity_name LIKE concat('%', #{param.activityName},'%')
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from Appraised_Activity
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="io.chicken.ggs.dal.model.AppraisedActivity" >
    insert into Appraised_Activity (activity_name, appraise_id,
      begin_date, end_date, sign_End_date, 
      activity_status, creator,
      update_time, remark)
    values (#{activityName,jdbcType=VARCHAR}, #{appraiseId,jdbcType=BIGINT},
      #{beginDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, #{signEndDate,jdbcType=TIMESTAMP}, 
      #{activityStatus,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR},
      #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.chicken.ggs.dal.model.AppraisedActivity" useGeneratedKeys="true" keyProperty="id" >
    insert into Appraised_Activity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="activityName != null" >
        activity_name,
      </if>
      <if test="appraiseId != null" >
        appraise_id,
      </if>
      <if test="beginDate != null" >
        begin_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="signEndDate != null" >
        sign_End_date,
      </if>
      <if test="activityStatus != null" >
        activity_status,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="activityName != null" >
        #{activityName,jdbcType=VARCHAR},
      </if>
      <if test="appraiseId != null" >
        #{appraiseId,jdbcType=BIGINT},
      </if>
      <if test="beginDate != null" >
        #{beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="signEndDate != null" >
        #{signEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="activityStatus != null" >
        #{activityStatus,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.chicken.ggs.dal.model.AppraisedActivity" >
    update Appraised_Activity
    <set >
      <if test="activityName != null" >
        activity_name = #{activityName,jdbcType=VARCHAR},
      </if>
      <if test="appraiseId != null" >
        appraise_id = #{appraiseId,jdbcType=BIGINT},
      </if>
      <if test="beginDate != null" >
        begin_date = #{beginDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="signEndDate != null" >
        sign_End_date = #{signEndDate,jdbcType=TIMESTAMP},
      </if>
      <if test="activityStatus != null" >
        activity_status = #{activityStatus,jdbcType=INTEGER},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.chicken.ggs.dal.model.AppraisedActivity" >
    update Appraised_Activity
    set activity_name = #{activityName,jdbcType=VARCHAR},
      appraise_id = #{appraiseId,jdbcType=BIGINT},
      begin_date = #{beginDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      sign_End_date = #{signEndDate,jdbcType=TIMESTAMP},
      activity_status = #{activityStatus,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.chicken.ggs.dal.model.AppraisedActivity" >
    update Appraised_Activity
    set activity_name = #{activityName,jdbcType=VARCHAR},
      appraise_id = #{appraiseId,jdbcType=BIGINT},
      begin_date = #{beginDate,jdbcType=TIMESTAMP},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      sign_End_date = #{signEndDate,jdbcType=TIMESTAMP},
      activity_status = #{activityStatus,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>