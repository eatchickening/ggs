<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.chicken.ggs.dal.dao.UserInfoMapper" >
  <resultMap id="BaseResultMap" type="io.chicken.ggs.dal.model.UserInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <!--<result column="password" property="password" jdbcType="VARCHAR" />-->
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="areacode" property="areacode" jdbcType="VARCHAR" />
    <result column="departcode" property="departcode" jdbcType="VARCHAR" />
    <result column="postcode" property="postcode" jdbcType="VARCHAR" />
    <result column="organcode" property="organcode" jdbcType="VARCHAR" />
    <result column="create_account" property="createAccount" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
      <result column="organName" property="organName" jdbcType="VARCHAR" />
      <result column="departName" property="departName" jdbcType="VARCHAR" />
      <result column="postName" property="postName" jdbcType="VARCHAR" />
  </resultMap>

    <!--用户列表字段-->
    <resultMap id="UserInfoVOResultMap" type="io.chicken.ggs.common.vo.UserInfoVO" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="account" property="account" jdbcType="VARCHAR" />
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="mobile" property="mobile" jdbcType="VARCHAR" />
        <result column="areacode" property="areacode" jdbcType="VARCHAR" />
        <result column="departcode" property="departcode" jdbcType="VARCHAR" />
        <result column="postcode" property="postcode" jdbcType="VARCHAR" />
        <result column="organcode" property="organcode" jdbcType="VARCHAR" />
        <result column="create_account" property="createAccount" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="is_delete" property="isDelete" jdbcType="BIT" />
        <result column="organName" property="organName" jdbcType="VARCHAR" />
        <result column="departName" property="departName" jdbcType="VARCHAR" />
        <result column="postName" property="postName" jdbcType="VARCHAR" />
        <result column="menu_id" property="menuId" jdbcType="VARCHAR" />
    </resultMap>

      <sql id="Base_Column_List" >
        id, account, username, email, mobile, areacode, departcode, postcode, organcode,
        create_account, create_time, update_time, is_delete
      </sql>
      <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from user_info
        where is_delete = 0
        and id = #{id,jdbcType=INTEGER}
      </select>

    <select id="queryList" resultMap="UserInfoVOResultMap">
        select
        a.id, a.account, a.username, a.organcode, c.name organName,
        a.departcode, b.name departName, a.postcode, d.name postName
        from user_info a
        left join depart b
        on (a.departcode = b.departcode)
        left join organization c
        on (a.organcode = c.organcode)
        left join post d
        on (a.postcode = d.postcode)
        where a.is_delete = 0
        <if test="param.id != null" >
            and a.id = #{param.id}
        </if>
        <if test="param.account != null and param.account != ''" >
            and a.account = #{param.account}
        </if>
        <if test="param.username != null and param.username != ''" >
            and a.username = #{param.username}
        </if>
        <if test="param.departName != null and param.departName != ''">
            and b.name like concat(#{param.departName},'%')
        </if>
        <if test="param.organName != null and param.organName != ''">
            and c.name like concat(#{param.organName},'%')
        </if>
        <if test="param.postName != null and param.postName != ''">
            and d.name like concat(#{param.postName},'%')
        </if>
        ORDER by a.create_time desc
        limit #{start}, #{pageSize}
    </select>
    <select id="queryCount" resultType="java.lang.Long">
        select count(1)
        from user_info a
        where a.is_delete = 0
        <if test="param.id != null" >
            and a.id = #{param.id}
        </if>
        <if test="param.account != null and param.account != ''" >
            and a.account = #{param.account}
        </if>
        <if test="param.username != null and param.username != ''" >
            and a.username = #{param.username}
        </if>
        <if test="param.organName != null and param.organName != ''" >
            and exists(
                select 1 from organization b where b.organcode = a.organcode
                and b.name like concat(#{param.organName},'%')
            )
        </if>
        <if test="param.departName != null and param.departName != ''" >
            and exists(
                select 1 from depart b where b.departcode = a.departcode
                and b.name like concat(#{param.departName},'%')
            )
        </if>
        <if test="param.postName != null and param.postName != ''" >
            and exists(
                select 1 from post b where b.postcode = a.postcode
                and b.name like concat(#{param.postName},'%')
            )
        </if>

    </select>

    <select id="queryListByUserInfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from user_info
        where is_delete = 0
        <if test="param.id != null" >
            and id = #{param.id}
        </if>
        <if test="param.account != null" >
            and account = #{param.account}
        </if>
        <if test="param.username != null" >
            and username = #{param.username}
        </if>
        <if test="param.email != null" >
            and email = #{param.email}
        </if>
        <if test="param.mobile != null" >
            and mobile = #{param.mobile}
        </if>
        <if test="param.areacode != null" >
            and areacode = #{param.areacode}
        </if>
        <if test="param.departcode != null" >
            and departcode = #{param.departcode}
        </if>
        <if test="param.postcode != null" >
            and postcode = #{param.postcode}
        </if>
        <if test="param.organcode != null" >
            and organcode = #{param.organcode}
        </if>
        <if test="param.createAccount != null" >
            and create_account = #{param.createAccount}
        </if>
    </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_info
    where is_delete = 0
    and id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="io.chicken.ggs.dal.model.UserInfo" >
    insert into user_info (account, username,
      password, email, mobile, 
      areacode, departcode, postcode, 
      organcode, create_account,
      update_time)
    values (#{account,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{areacode,jdbcType=VARCHAR}, #{departcode,jdbcType=VARCHAR}, #{postcode,jdbcType=VARCHAR}, 
      #{organcode,jdbcType=VARCHAR}, #{createAccount,jdbcType=VARCHAR},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="io.chicken.ggs.dal.model.UserInfo" useGeneratedKeys="true" keyProperty="id" >
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        account,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="areacode != null" >
        areacode,
      </if>
      <if test="departcode != null" >
        departcode,
      </if>
      <if test="postcode != null" >
        postcode,
      </if>
      <if test="organcode != null" >
        organcode,
      </if>
      <if test="createAccount != null" >
        create_account,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="areacode != null" >
        #{areacode,jdbcType=VARCHAR},
      </if>
      <if test="departcode != null" >
        #{departcode,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="organcode != null" >
        #{organcode,jdbcType=VARCHAR},
      </if>
      <if test="createAccount != null" >
        #{createAccount,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.chicken.ggs.dal.model.UserInfo" >
    update user_info
    <set >
        update_time = now(),
        <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="areacode != null" >
        areacode = #{areacode,jdbcType=VARCHAR},
      </if>
      <if test="departcode != null" >
        departcode = #{departcode,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        postcode = #{postcode,jdbcType=VARCHAR},
      </if>
      <if test="organcode != null" >
        organcode = #{organcode,jdbcType=VARCHAR},
      </if>
      <if test="createAccount != null" >
        create_account = #{createAccount,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where is_delete = 0
    and id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.chicken.ggs.dal.model.UserInfo" >
    update user_info
    set account = #{account,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      areacode = #{areacode,jdbcType=VARCHAR},
      departcode = #{departcode,jdbcType=VARCHAR},
      postcode = #{postcode,jdbcType=VARCHAR},
      organcode = #{organcode,jdbcType=VARCHAR},
      create_account = #{createAccount,jdbcType=VARCHAR},
      update_time = now(),
      is_delete = #{isDelete,jdbcType=BIT}
    where is_delete = 0
    and id = #{id,jdbcType=INTEGER}
  </update>


    <select id="login" resultMap="UserInfoVOResultMap">
        select u.*, m.menu_id from user_info u
        left join user_menu m
        on u.account = m.user_account
        where is_delete = 0
        and u.account = #{account}
        and password = #{pwd}
    </select>
    <update id="resetPwdByAccount">
        update user_info
        set password = #{newPwd}
        where is_delete = 0
        and account = #{account}
    </update>

</mapper>