<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.chicken.ggs.dal.dao.AppraiseMapper" >
  <resultMap id="BaseResultMap" type="io.chicken.ggs.dal.model.Appraise" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="appraisedate" property="appraisedate" jdbcType="VARCHAR" />
    <result column="appraisename" property="appraisename" jdbcType="VARCHAR" />
    <result column="appraisecode" property="appraisecode" jdbcType="VARCHAR" />
    <result column="appraiselevel" property="appraiselevel" jdbcType="VARCHAR" />
    <result column="appraisenumber" property="appraisenumber" jdbcType="INTEGER" />
    <result column="appraiseschool" property="appraiseschool" jdbcType="INTEGER" />
    <result column="appraisequota" property="appraisequota" jdbcType="INTEGER" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="organcode" property="organcode" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="BaseResultMapDeail" type="io.chicken.ggs.dal.model.AppraiseDetail" extends="BaseResultMap">
  </resultMap>
  <sql id="Base_Column_List" >
    id, appraisedate, appraisename, appraisecode, appraiselevel, appraisenumber, appraiseschool,appraisequota,operator,organcode,
    remark, create_time
  </sql>
  <select id = "queryList" resultMap="BaseResultMap">
    select
    id, appraisedate, appraisename, appraisecode, appraiselevel, appraisenumber, appraiseschool,appraisequota,operator,organcode,
    remark, create_time
    from appraise
      <where>
          <if test="appraiseName != null and appraiseName.trim() != ''">
              and appraisename like concat('%', #{appraisename}, '%')
          </if>
          <if test="appraiseLevel != null and appraiseLevel.trim() != ''">
            and appraiselevel like concat('%', #{appraiseLevel}, '%')
          </if>
          <if test="organcode != null and organcode.trim() != ''">
            and organcode like concat('%', #{organcode}, '%')
          </if>
        <if test="((areacode != null and areacode.trim() != '')
          or (schooltype != null and schooltype.trim() != '')
          or (schoolcode != null and schoolcode.trim() != '')
          ) ">
          and `organcode`in
          (
          select schoolcode from school
          <where>
            <if test="schoolcode != null and schoolcode.trim() != ''">
              and `schoolcode` = #{schoolcode}
            </if>
            <if test="areacode != null and areacode.trim() != ''">
              and `areacode` = #{areacode}
            </if>
            <if test="schooltype != null  and schooltype.trim() != ''">
              and `schooltype` = #{schooltype}
            </if>
          </where>
          )
        </if>
      </where>
    <if test="offset != null and limit != null">
        limit #{offset}, #{limit}
    </if>
  </select>
  <select id = "queryTotal" resultType="java.lang.Long">
      select count(*)
      from appraise
    <where>
      <if test="appraiseName != null and appraiseName.trim() != ''">
        and appraisename like concat('%', #{appraisename}, '%')
      </if>
      <if test="appraiseLevel != null and appraiseLevel.trim() != ''">
        and appraiselevel like concat('%', #{appraiseLevel}, '%')
      </if>
      <if test="organcode != null and organcode.trim() != ''">
        and organcode like concat('%', #{organcode}, '%')
      </if>
      <if test="((areacode != null and areacode.trim() != '')
          or (schooltype != null and schooltype.trim() != '')
          or (schoolcode != null and schoolcode.trim() != '')
          ) ">
        and `organcode`in
        (
        select schoolcode from school
        <where>
          <if test="schoolcode != null and schoolcode.trim() != ''">
            and `schoolcode` = #{schoolcode}
          </if>
          <if test="areacode != null and areacode.trim() != ''">
            and `areacode` = #{areacode}
          </if>
          <if test="schooltype != null  and schooltype.trim() != ''">
            and `schooltype` = #{schooltype}
          </if>
        </where>
        )
      </if>
    </where>

  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMapDeail" parameterType="java.lang.Long" >
    select
       id, appraisedate, appraisename, appraisecode, appraiselevel, appraisenumber, appraiseschool,appraisequota,operator,organcode,
        remark, create_time
    from
      appraise
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id = "queryListByIds" resultMap="BaseResultMap">
    select
      id, appraisedate, appraisename, appraisecode, appraiselevel, appraisenumber, appraiseschool,appraisequota,operator,organcode,
      remark, create_time
    from
      appraise
    where id in
    <foreach collection="list" open="(" separator="," close=")" item="id" index="index">
        #{id}
    </foreach>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from appraise
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="io.chicken.ggs.dal.model.Appraise" >
    insert into appraise (id, appraisedate, appraisename, 
      appraisecode, appraiselevel, appraisenumber, 
      appraiseschool, appraisequota, remark, 
      create_time)
    values (#{id,jdbcType=BIGINT}, #{appraisedate,jdbcType=VARCHAR}, #{appraisename,jdbcType=VARCHAR}, 
      #{appraisecode,jdbcType=VARCHAR}, #{appraiselevel,jdbcType=VARCHAR}, #{appraisenumber,jdbcType=INTEGER}, 
      #{appraiseschool,jdbcType=INTEGER}, #{appraisequota,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective"   parameterType="io.chicken.ggs.dal.model.Appraise" useGeneratedKeys="true" keyProperty="id">
    insert into appraise
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="appraisedate != null" >
        appraisedate,
      </if>
      <if test="appraisename != null" >
        appraisename,
      </if>
      <if test="appraisecode != null" >
        appraisecode,
      </if>
      <if test="appraiselevel != null" >
        appraiselevel,
      </if>
      <if test="appraisenumber != null" >
        appraisenumber,
      </if>
      <if test="appraiseschool != null" >
        appraiseschool,
      </if>
      <if test="appraisequota != null" >
        appraisequota,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="organcode != null" >
        organcode,
      </if>


      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="appraisedate != null" >
        #{appraisedate,jdbcType=VARCHAR},
      </if>
      <if test="appraisename != null" >
        #{appraisename,jdbcType=VARCHAR},
      </if>
      <if test="appraisecode != null" >
        #{appraisecode,jdbcType=VARCHAR},
      </if>
      <if test="appraiselevel != null" >
        #{appraiselevel,jdbcType=VARCHAR},
      </if>
      <if test="appraisenumber != null" >
        #{appraisenumber,jdbcType=INTEGER},
      </if>
      <if test="appraiseschool != null" >
        #{appraiseschool,jdbcType=INTEGER},
      </if>
      <if test="appraisequota != null" >
        #{appraisequota,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="organcode != null" >
        #{organcode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.chicken.ggs.dal.model.Appraise" >
    update appraise
    <set >
      <if test="appraisedate != null" >
        appraisedate = #{appraisedate,jdbcType=VARCHAR},
      </if>
      <if test="appraisename != null" >
        appraisename = #{appraisename,jdbcType=VARCHAR},
      </if>
      <if test="appraisecode != null" >
        appraisecode = #{appraisecode,jdbcType=VARCHAR},
      </if>
      <if test="appraiselevel != null" >
        appraiselevel = #{appraiselevel,jdbcType=VARCHAR},
      </if>
      <if test="appraisenumber != null" >
        appraisenumber = #{appraisenumber,jdbcType=INTEGER},
      </if>
      <if test="appraiseschool != null" >
        appraiseschool = #{appraiseschool,jdbcType=INTEGER},
      </if>
      <if test="appraisequota != null" >
        appraisequota = #{appraisequota,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.chicken.ggs.dal.model.Appraise" >
    update appraise
    set appraisedate = #{appraisedate,jdbcType=VARCHAR},
      appraisename = #{appraisename,jdbcType=VARCHAR},
      appraisecode = #{appraisecode,jdbcType=VARCHAR},
      appraiselevel = #{appraiselevel,jdbcType=VARCHAR},
      appraisenumber = #{appraisenumber,jdbcType=INTEGER},
      appraiseschool = #{appraiseschool,jdbcType=INTEGER},
      appraisequota = #{appraisequota,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>