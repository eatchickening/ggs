<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.chicken.ggs.dal.dao.TeacherMapper" >
  <resultMap id="BaseResultMap" type="io.chicken.ggs.dal.model.Teacher" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="classname" property="classname" jdbcType="VARCHAR" />
    <result column="school_id" property="schoolId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, sex, classname, school_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="queryList" resultType="io.chicken.ggs.dal.model.Teacher">
    select * from teacher
    where
    name = name
    and school_id
    IN (
      select school_id
      from school
      where
      name=schoolename
      and areacode
      in(
        select areacode
        from ba_area
        where
        name = areaname
      )
      and school_type_id
      IN (
        select school_type_id
        from schooltype
        where schooltype=schooltype
      )
    )

    select * from teacher
    <where>
      <if test="name != null">
        and `name` = #{name}
      </if>

      <if test="(
      (areaname != null and areaname.trim() != '' )
      or
      (schooltype !=null and schooltype.trim() != '')
      or
      (schoolname !=null and schoolname.trim() != '')
      ) ">
        and `schoolid`in
        (
        select schoolid from school
        <where>
          <if test="schoolname != null">
            and `name` = #{schoolname}
          </if>
          <if test="areaname != null">
            and `areacode` = #{areaname}
          </if>
          <if test="schooltype != null">
            and `schooltype` = #{schooltype}
          </if>
        </where>
        )
      </if>

    </where>
    <if test="offset != null and limit != null">
      limit #{offset}, #{limit}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from teacher
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="io.chicken.ggs.dal.model.Teacher" >
    insert into teacher (id, name, sex, 
      classname, school_id)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{classname,jdbcType=VARCHAR}, #{schoolId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="io.chicken.ggs.dal.model.Teacher" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="classname != null" >
        classname,
      </if>
      <if test="schoolId != null" >
        school_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="classname != null" >
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        #{schoolId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.chicken.ggs.dal.model.Teacher" >
    update teacher
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="classname != null" >
        classname = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="schoolId != null" >
        school_id = #{schoolId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.chicken.ggs.dal.model.Teacher" >
    update teacher
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      classname = #{classname,jdbcType=VARCHAR},
      school_id = #{schoolId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>